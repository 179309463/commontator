<% # Clients of this partial must supply the following variable:
   # thread
%>

<% can_subscribe = thread.can_subscribe?(@commontator) %>
<% can_edit = thread.can_be_edited_by?(@commontator) %>

<span id="thread_<%= thread.id.to_s %>_header_span" class="thread_header">
  <%= thread.config.comment_name.capitalize.pluralize %>
</span>

<span id="thread_<%= thread.id.to_s %>_actions_span" class="thread_actions">
  <% if can_subscribe %>
    <span id="thread_<%= thread.id.to_s %>_subscription_span" class="thread_subscription">
      <%= render :partial => 'commontator/subscriptions/link',
                 :locals => {:thread => thread} %>
    </span>
  <% end %>
  
  &nbsp;

  <% if can_edit %>
    <% is_closed = thread.is_closed? %>
    <% close_string = is_closed ? "reopen" : "close" %>
    <%= link_to close_string.capitalize,
                polymorphic_path([close_string, thread]),
                :confirm => (!is_closed ? \
                              'Are you sure you want to close this thread' : nil),
                :method => :put,
                :id => "thread_#{thread.id.to_s}_#{close_string}_link",
                :class => "thread_#{close_string}_link" %>
  <% end %>
</span>

<div id="thread_<%= thread.id.to_s %>_comment_list_div" class="thread_comment_list">
  <% thread.ordered_comments.each do |comment| %>
    <% next unless comment.can_be_read_by?(@commontator) %>
    <%= render :partial => 'commontator/comments/show',
               :locals => {:comment => comment} %>
  <% end %>
</div>

<% unless thread.is_closed? %>

  <br/>

  <div id="thread_<%= thread.id %>_new_comment_div" class="thread_new_comment"></div>

  <span id="thread_<%= thread.id %>_new_comment_link_span" class="thread_new_comment_link">
    <%= link_to thread.config.comment_create_verb_present.capitalize + ' ' + thread.config.comment_name,
        new_thread_comment_path(thread), :remote => true %>
  </span>
  
<% end %>
